// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreeExplorer.Data;

namespace TreeExplorer.Migrations
{
    [DbContext(typeof(UsserContext))]
    partial class UsserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TreeExplorer.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdW")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsserId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("TreeExplorer.Models.Usser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ussers");
                });

            modelBuilder.Entity("TreeExplorer.Models.UsserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpV4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsserId");

                    b.ToTable("UsserDatas");
                });

            modelBuilder.Entity("TreeExplorer.Models.Element", b =>
                {
                    b.HasOne("TreeExplorer.Models.Usser", "Usser")
                        .WithMany("Elements")
                        .HasForeignKey("UsserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usser");
                });

            modelBuilder.Entity("TreeExplorer.Models.UsserData", b =>
                {
                    b.HasOne("TreeExplorer.Models.Usser", "Usser")
                        .WithMany("UsserDatas")
                        .HasForeignKey("UsserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usser");
                });

            modelBuilder.Entity("TreeExplorer.Models.Usser", b =>
                {
                    b.Navigation("Elements");

                    b.Navigation("UsserDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
